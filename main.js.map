{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app-user/app-user/app-user.component.css","webpack:///./src/app/app-user/app-user/app-user.component.html","webpack:///./src/app/app-user/app-user/app-user.component.ts","webpack:///./src/app/app-user/app-users/app-users.component.css","webpack:///./src/app/app-user/app-users/app-users.component.html","webpack:///./src/app/app-user/app-users/app-users.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/compose/compose.component.css","webpack:///./src/app/compose/compose.component.html","webpack:///./src/app/compose/compose.component.ts","webpack:///./src/app/drafts/drafts-datasource.ts","webpack:///./src/app/drafts/drafts.component.css","webpack:///./src/app/drafts/drafts.component.html","webpack:///./src/app/drafts/drafts.component.ts","webpack:///./src/app/groups/group/group.component.css","webpack:///./src/app/groups/group/group.component.html","webpack:///./src/app/groups/group/group.component.ts","webpack:///./src/app/groups/groups/groups.component.css","webpack:///./src/app/groups/groups/groups.component.html","webpack:///./src/app/groups/groups/groups.component.ts","webpack:///./src/app/inbox/inbox-datasource.ts","webpack:///./src/app/inbox/inbox.component.css","webpack:///./src/app/inbox/inbox.component.html","webpack:///./src/app/inbox/inbox.component.ts","webpack:///./src/app/main-nav/main-nav.component.css","webpack:///./src/app/main-nav/main-nav.component.html","webpack:///./src/app/main-nav/main-nav.component.ts","webpack:///./src/app/roles/role/role.component.css","webpack:///./src/app/roles/role/role.component.html","webpack:///./src/app/roles/role/role.component.ts","webpack:///./src/app/roles/roles/roles.component.css","webpack:///./src/app/roles/roles/roles.component.html","webpack:///./src/app/roles/roles/roles.component.ts","webpack:///./src/app/sentbox/sentbox-datasource.ts","webpack:///./src/app/sentbox/sentbox.component.css","webpack:///./src/app/sentbox/sentbox.component.html","webpack:///./src/app/sentbox/sentbox.component.ts","webpack:///./src/app/shared/app-user.service.ts","webpack:///./src/app/shared/confirm-dialog/confirm-dialog.component.css","webpack:///./src/app/shared/confirm-dialog/confirm-dialog.component.html","webpack:///./src/app/shared/confirm-dialog/confirm-dialog.component.ts","webpack:///./src/app/shared/group.service.ts","webpack:///./src/app/shared/material-model/material-model.module.ts","webpack:///./src/app/shared/role.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {InboxComponent} from './inbox/inbox.component';\nimport{SentboxComponent} from './sentbox/sentbox.component';\nimport{DraftsComponent} from './drafts/drafts.component';\nimport{ComposeComponent} from './compose/compose.component';\n\nimport { RolesComponent } from './roles/roles/roles.component';\nimport{ GroupsComponent } from './groups/groups/groups.component';\nimport{AppUsersComponent } from './app-user/app-users/app-users.component'; \nconst routes: Routes = [\n  {path:'',component:InboxComponent},\n  {path:'sentbox',component:SentboxComponent},\n  {path:'drafts',component:DraftsComponent},\n  {path:'comp',component:ComposeComponent},\n  // {path:'role',component:RoleComponent},\n  {path:'roles',component:RolesComponent},\n  {path:'groups',component:GroupsComponent},\n  {path :'user',component:AppUsersComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<mat-toolbar>\\n  <mat-toolbar-row autofocus=\\\"false\\\">\\n    <span>{{User.form.controls[$key]? \\\"Update User\\\":\\\"Create User\\\"}}</span>    \\n      <span class=\\\"example-spacer\\\"></span>      \\n  </mat-toolbar-row>\\n</mat-toolbar>\\n<form [formGroup]=\\\"User.form\\\" class=\\\"normal-form\\\">\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"300px\\\">\\n    <mat-grid-tile>\\n      <div class=\\\"controles-container\\\">\\n        <input type=\\\"hidden\\\" formControlName=\\\"$key\\\">\\n        <mat-form-field>\\n          <input formControlName=\\\"UserId\\\" matInput placeholder=\\\"UserId\\\">\\n          <mat-error>This field is mandatory.</mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input formControlName=\\\"UserName\\\" matInput placeholder=\\\"UserName\\\">\\n          <mat-error>This field is mandatory.</mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input formControlName=\\\"Email\\\" matInput placeholder=\\\"Email\\\">\\n          <mat-error>Invalid email address.</mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input formControlName=\\\"Phone\\\" matInput placeholder=\\\"Phone\\\">\\n          <mat-error *ngIf=\\\"User.form.controls['Phone'].errors?.required\\\">This field is mandatory.</mat-error>\\n          <mat-error *ngIf=\\\"User.form.controls['Phone'].errors?.minlength\\\">Minimum 8 charactors needed.</mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input formControlName=\\\"PassWord\\\" matInput placeholder=\\\"PassWord\\\">\\n          <mat-error>Invalid PassWord.</mat-error>\\n        </mat-form-field>\\n      </div>\\n    </mat-grid-tile>\\n    <mat-grid-tile>\\n      <div class=\\\"controles-container\\\">\\n        <div class=\\\"add-bottom-padding\\\">\\n          <mat-radio-group formControlName=\\\"User_cust\\\">\\n            <mat-radio-button value=\\\"U\\\">User</mat-radio-button>\\n            <mat-radio-button value=\\\"C\\\">Customer</mat-radio-button>\\n          </mat-radio-group>\\n        </div>\\n\\n        <div class=\\\"add-bottom-padding\\\">\\n          <mat-checkbox formControlName=\\\"IsBlocked\\\">Is Blocked?</mat-checkbox>\\n        </div>\\n        <div class=\\\"button-row\\\">\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"Onsubmit()\\\" type=\\\"submit\\\">Submit</button>\\n          <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear()\\\">Clear</button>\\n        </div>\\n      </div>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { AppUserService } from '../../shared/app-user.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { AppUsersComponent } from '../app-users/app-users.component';\n\n@Component({\n  selector: 'app-app-user',\n  templateUrl: './app-user.component.html',\n  styleUrls: ['./app-user.component.css']\n})\nexport class AppUserComponent implements OnInit {\n\n  constructor(private User: AppUserService,\n    private toastr: ToastrService,\n    public dialogRef: MatDialogRef<AppUsersComponent>\n  ) { }\n \n\n  ngOnInit() {\n    this.User.GetUsers();\n  }\n \n  onClear() {\n    let $key = this.User.form.get('$key').value;\n    this.User.form.reset();\n    this.User.initializeFormGroup();\n    this.User.form.patchValue({ $key });\n    this.dialogRef.close();\n  }\n  Onsubmit() {\n    if (this.User.form.valid) {\n      if(!this.User.form.get('$key').value){\n      // console.log(this.role.form.value);\n      this.User.InsertUser(this.User.form.value);\n      this.toastr.success(':: User added succesfully!');\n      }else{\n        this.User.UpdateUser(this.User.form.value);\n      this.toastr.info(':: User Updated succesfully!');\n      }\n      this.User.form.reset();\n      this.User.initializeFormGroup();\n      this.OnClose();\n    }\n  }\n  OnClose() {\n    this.User.form.reset();\n    this.User.initializeFormGroup();\n    this.dialogRef.close();\n  }\n  CloseDialog(){\n    this.dialogRef.close();    \n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<mat-card>\\n  \\n  <button mat-raised-button (click)=\\\"openUserDialog()\\\">\\n    <mat-icon>create</mat-icon>\\n    Create User</button>\\n\\n  <mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search..\\\">\\n  </mat-form-field>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"listdata\\\" matSort>\\n      <ng-container matColumnDef=\\\"$key\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> $key </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.$key}}</td>\\n      </ng-container>\\n      <!-- Progress Column -->\\n      <ng-container matColumnDef=\\\"UserId\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> UserId </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.UserId}}</td>\\n      </ng-container>\\n      <!-- Progress Column -->\\n      <ng-container matColumnDef=\\\"UserName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> UserName </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.UserName}}</td>\\n      </ng-container>\\n      <!-- Progress Column -->\\n      <ng-container matColumnDef=\\\"Email\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.Email}}</td>\\n      </ng-container>\\n      <!-- Progress Column -->\\n      <ng-container matColumnDef=\\\"Phone\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Phone </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.Phone}}</td>\\n      </ng-container>\\n      <!-- Progress Column -->\\n      <ng-container matColumnDef=\\\"PassWord\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> PassWord </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.PassWord}}</td>\\n      </ng-container>\\n      <!-- Progress Column -->\\n      <ng-container matColumnDef=\\\"User_cust\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> User_cust </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.User_cust}}</td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"LastUpdated\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> LastUpdated </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.LastUpdated | date: format}}</td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"IsBlocked\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>IsBlocked </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.IsBlocked}}</td>\\n      </ng-container>\\n      <!-- Action Column -->\\n      <ng-container matColumnDef=\\\"Action\\\">\\n        <th mat-header-cell *matHeaderCellDef> Action </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">\\n          <button mat-icon-button (click)=\\\"OnEdit(row)\\\">\\n            <mat-icon>launch</mat-icon>\\n          </button>\\n          <button mat-icon-button color=\\\"warn\\\" (click)=\\\"OnDelete(row)\\\">\\n            <mat-icon>delete_outline</mat-icon>\\n          </button>\\n\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n      <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"isLoadingResults\\\"></mat-progress-bar>\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n  </div>\\n</mat-card>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AppUserService } from '../../shared/app-user.service';\nimport { MatPaginator, MatSort, MatTableDataSource, MatDialogConfig } from '@angular/material';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { AppUserComponent } from '../app-user/app-user.component';\nimport { ToastrService } from 'ngx-toastr';\nimport { ConfirmDialogComponent } from '../../shared/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-app-users',\n  templateUrl: './app-users.component.html',\n  styleUrls: ['./app-users.component.css']\n})\nexport class AppUsersComponent implements OnInit {\n\n  listdata: MatTableDataSource<any>;\n  displayedColumns: string[] = \n  ['UserId', 'UserName', 'Email', 'Phone', 'PassWord', 'User_cust', 'IsBlocked', 'LastUpdated','Action'];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  isLoadingResults = true;\n  // isRateLimitReached = false;\n  constructor(private userService: AppUserService,\n    public dialog: MatDialog,\n    private toastr: ToastrService,\n  ) { }\n\n  ngOnInit() {\n    this.isLoadingResults = true;\n    this.userService.GetUsers().subscribe(\n      UserList => {\n        let array = UserList.map(item => {\n          return {\n            $key: item.key,\n            ...item.payload.val()\n          };\n        });\n        this.listdata = new MatTableDataSource(array);\n        this.listdata.sort = this.sort;\n        this.listdata.paginator = this.paginator;\n        this.isLoadingResults = false;\n        // this.isRateLimitReached = false;\n      }\n    );\n\n  }\n  applyFilter(filterValue: string) {\n    this.listdata.filter = filterValue.trim().toLowerCase();\n\n    if (this.listdata.paginator) {\n      this.listdata.paginator.firstPage();\n    }\n  }\n  openUserDialog() {\n    // const dialogConfig = new MatDialogConfig();\n    // dialogConfig.disableClose = true;\n    // dialogConfig.autoFocus = true;\n    // dialogConfig.hasBackdrop = false;\n    this.userService.initializeFormGroup();\n    const dialogRef = this.dialog.open(AppUserComponent, {\n      width: '80%',\n      data: {},\n      hasBackdrop: false,\n      autoFocus: true,\n      disableClose: true\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      // this.animal = result;\n    });\n  }\n  OnEdit(row) {\n    this.userService.PopulateUser(row);\n    const dialogRef = this.dialog.open(AppUserComponent, {\n      width: '80%',\n      data: {},\n      hasBackdrop: false,\n      autoFocus: true,\n      disableClose: true\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      // this.animal = result;\n    });\n  }\n  OnDelete(row) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      // width: '250px',\n      data: {}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        console.log(row.$key);\n        this.userService.DeleteUser(row.$key);\n        this.toastr.warning(':: Roles delete succesfully!');\n        // this.animal = result;\n      }\n    });\n  }\n\n}\n\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-main-nav></app-main-nav>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angular-Mails';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModelModule } from './shared/material-model/material-model.module';\nimport { MainNavComponent } from './main-nav/main-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport {\n  MatToolbarModule, MatButtonModule, MatSidenavModule,\n  MatIconModule, MatListModule, MatTableModule, MatPaginatorModule, MatSortModule\n} from '@angular/material';\nimport { InboxComponent } from './inbox/inbox.component';\nimport { SentboxComponent } from './sentbox/sentbox.component';\nimport { DraftsComponent } from './drafts/drafts.component';\nimport { ComposeComponent } from './compose/compose.component';\nimport { CKEditorModule } from 'ngx-ckeditor';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RoleComponent } from './roles/role/role.component';\nimport { RoleService } from './shared/role.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { AngularFireModule } from 'angularfire2';\nimport { environment } from '../environments/environment';\nimport { RolesComponent } from './roles/roles/roles.component';\nimport { ConfirmDialogComponent } from './shared/confirm-dialog/confirm-dialog.component';\nimport { GroupComponent } from './groups/group/group.component';\nimport { GroupsComponent } from './groups/groups/groups.component';\nimport { AppUserComponent } from './app-user/app-user/app-user.component';\nimport { AppUsersComponent } from './app-user/app-users/app-users.component';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { NgxEditorModule } from 'ngx-editor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainNavComponent,\n    InboxComponent,\n    SentboxComponent,\n    DraftsComponent,\n    ComposeComponent,\n    RolesComponent,\n    RoleComponent,\n    ConfirmDialogComponent,\n    GroupComponent,\n    GroupsComponent,    \n    AppUserComponent,\n    AppUsersComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModelModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    CKEditorModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    ToastrModule.forRoot(),\n    AngularFireDatabaseModule,\n    AngularFireModule.initializeApp(environment.FireConfig),\n    NgMultiSelectDropDownModule.forRoot(),\n    NgxEditorModule\n  ],\n  providers: [RoleService],\n  bootstrap: [AppComponent],\n  entryComponents: [ComposeComponent,\n    ConfirmDialogComponent,\n    RoleComponent,\n    GroupComponent,\n    AppUserComponent\n  ]\n\n})\nexport class AppModule { }\n","module.exports = \".example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-full-width {\\r\\n    width: 100%;\\r\\n  }\"","module.exports = \"<form  class=\\\"normal-form\\\" #f=\\\"ngForm\\\">\\r\\n<mat-card>\\r\\n  <span>To</span>\\r\\n  <ng-multiselect-dropdown [placeholder]=\\\"'To'\\\" [data]=\\\"dropdownList\\\" [(ngModel)]=\\\"ToItem\\\" [settings]=\\\"dropdownSettings\\\"\\r\\n    (onSelect)=\\\"onItemSelect($event)\\\"\\r\\n     >\\r\\n  </ng-multiselect-dropdown>\\r\\n  <span>Cc</span>\\r\\n  <ng-multiselect-dropdown [placeholder]=\\\"'Cc'\\\" [data]=\\\"dropdownList\\\" [(ngModel)]=\\\"CcItem\\\" [settings]=\\\"dropdownSettings\\\"\\r\\n    (onSelect)=\\\"onItemSelect($event)\\\"\\r\\n     >\\r\\n  </ng-multiselect-dropdown>\\r\\n\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput placeholder=\\\"Subject\\\">\\r\\n  </mat-form-field>\\r\\n  <app-ngx-editor [placeholder]=\\\"'Enter text here...'\\\" [spellcheck]=\\\"true\\\" [(ngModel)]=\\\"htmlContent\\\"></app-ngx-editor>\\r\\n  <!-- <ck-editor name=\\\"editor1\\\" [(ngModel)]=\\\"editorValue\\\" skin=\\\"moono-lisa\\\" language=\\\"en\\\" [fullPage]=\\\"true\\\"></ck-editor> -->\\r\\n  <mat-card>\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"dddd()\\\">Send</button>\\r\\n    <button mat-raised-button color=\\\"warn\\\" (click)=\\\"Close()\\\">Cancel</button>\\r\\n  </mat-card>\\r\\n</mat-card>\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport { AppUserService } from '../shared/app-user.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nexport interface User {\n  name: string;\n}\n@Component({\n  selector: 'app-compose',\n  templateUrl: './compose.component.html',\n  styleUrls: ['./compose.component.css']\n})\nexport class ComposeComponent implements OnInit {\n  dropdownList = [];\n  ToItem = [];\n  CcItem=[];\n  dropdownSettings = {};\n  htmlContent='Hi Harisha';\n  constructor(private AppUser:AppUserService,\n    public dialogRef: MatDialogRef<any>) { }\n\n  ngOnInit() {\n    this.AppUser.GetUsers().subscribe(\n      UserList => {\n        let array = UserList.map(item => {\n          return {\n            $key: item.key,\n            ...item.payload.val()\n          };\n        });\n        this.dropdownList =array;\n       \n        // this.isRateLimitReached = false;\n      }\n    );\n    // this.dropdownList = [\n    //   { item_id: 1, item_text: 'Mumbai' },\n    //   { item_id: 2, item_text: 'Bangaluru' },\n    //   { item_id: 3, item_text: 'Pune' },\n    //   { item_id: 4, item_text: 'Navsari' },\n    //   { item_id: 5, item_text: 'New Delhi' }\n    // ];\n\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: 'UserId',\n      textField: 'UserName',\n      // selectAllText: 'Select All',\n      // unSelectAllText: 'UnSelect All',\n      itemsShowLimit: 10,\n      allowSearchFilter: true,\n      enableCheckAll:false,\n    };\n  }\n  onItemSelect (item:any) {\n    console.log(item);\n  }\n  onSelectAll (items: any) {\n    console.log(items);\n  }\n  Send(){\n    console.log(this.ToItem);\n    console.log(this.htmlContent);\n  }\n  dddd(){\n    console.log(this.ToItem);\n    console.log(this.htmlContent);\n  }\n  Close(){\n    this.dialogRef.close();            \n  }\n  }\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface DraftsItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: DraftsItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the Drafts view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class DraftsDataSource extends DataSource<DraftsItem> {\n  data: DraftsItem[] = EXAMPLE_DATA;\n\n  constructor(private paginator: MatPaginator, private sort: MatSort) {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<DraftsItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    // Set the paginators length\n    this.paginator.length = this.data.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: DraftsItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: DraftsItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table #table [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\n    <!-- Id Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.id}}</td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.name}}</td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n  <mat-paginator #paginator\\n    [length]=\\\"dataSource.data.length\\\"\\n    [pageIndex]=\\\"0\\\"\\n    [pageSize]=\\\"50\\\"\\n    [pageSizeOptions]=\\\"[25, 50, 100, 250]\\\">\\n  </mat-paginator>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { DraftsDataSource } from './drafts-datasource';\n\n@Component({\n  selector: 'app-drafts',\n  templateUrl: './drafts.component.html',\n  styleUrls: ['./drafts.component.css']\n})\nexport class DraftsComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  dataSource: DraftsDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.dataSource = new DraftsDataSource(this.paginator, this.sort);\n  }\n}\n","module.exports = \".example-icon {\\r\\n    padding: 0 14px;\\r\\n  }\\r\\n  \\r\\n  .example-spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\"","module.exports = \"<mat-toolbar>\\n    <mat-toolbar-row autofocus=\\\"false\\\">\\n      <span>{{Group.form.controls[$GroupId]? \\\"Update Group\\\":\\\"Create Group\\\"}}</span>    \\n        <span class=\\\"example-spacer\\\"></span>\\n        <!-- <button mat-icon-button (click)=\\\"CloseDialog()\\\" autofocus=\\\"false\\\">\\n            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">clear</mat-icon>\\n          </button> -->\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n  <form [formGroup]=\\\"Group.form\\\" class=\\\"normal-form\\\" (submit)=\\\"Onsubmit()\\\">\\n    <input type=\\\"hidden\\\" formControlName=\\\"$GroupId\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput formControlName=\\\"GroupName\\\" placeholder=\\\"Group\\\" >\\n      <mat-error> Please enter Group Name </mat-error>\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput formControlName=\\\"GroupEmail\\\" placeholder=\\\"Group Email\\\" >\\n      <mat-error> Please enter Group Email </mat-error>\\n    </mat-form-field>\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"Group.form.invalid\\\">Submit</button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"OnClear()\\\">Clear</button>\\n    </div>\\n  </form>\"","import { Component, OnInit } from '@angular/core';\nimport { GroupService } from '../../shared/group.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { GroupsComponent } from '../groups/groups.component';\n\n\n@Component({\n  selector: 'app-group',\n  templateUrl: './group.component.html',\n  styleUrls: ['./group.component.css']\n})\nexport class GroupComponent implements OnInit {\n\n  constructor(private Group: GroupService,\n    private toastr: ToastrService,\n    public dialogRef: MatDialogRef<GroupsComponent>) { }\n\n  ngOnInit() {\n    this.Group.GetGroup();\n  }\n  OnClear() {\n    this.Group.form.reset();\n    this.Group.InitializeFormGroup();\n    this.dialogRef.close();        \n  }\n  Onsubmit() {\n    if (this.Group.form.valid) {\n      if(!this.Group.form.get('$GroupId').value){\n      // console.log(this.role.form.value);\n      this.Group.InsertGroup(this.Group.form.value);\n      this.toastr.success(':: Group added succesfully!');\n      }else{\n        this.Group.UpdateGroup(this.Group.form.value);\n      this.toastr.info(':: Group Updated succesfully!');\n      }\n      this.Group.form.reset();\n      this.Group.InitializeFormGroup();\n      this.OnClose();\n    }\n  }\n  OnClose() {\n    this.Group.form.reset();\n    this.Group.InitializeFormGroup();\n    this.dialogRef.close();\n  }\n  CloseDialog(){\n    this.dialogRef.close();    \n  }\n}\n","module.exports = \"\"","module.exports = \"<mat-card>\\n    <button mat-raised-button (click)=\\\"openRoleDialog()\\\">\\n      <mat-icon>create</mat-icon>\\n      Create Group</button>\\n  \\n    <mat-form-field>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search..\\\">\\n    </mat-form-field>\\n  \\n    <div class=\\\"mat-elevation-z8\\\">\\n      <table mat-table [dataSource]=\\\"listdata\\\" matSort>\\n  \\n        <!-- ID Column -->\\n        <!-- <ng-container matColumnDef=\\\"id\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </td>\\n      </ng-container> -->\\n        <!-- RoleId Column -->\\n        <ng-container matColumnDef=\\\"$GroupId\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> $Group Id </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.$GroupId}}</td>\\n        </ng-container>\\n        <!-- Progress Column -->\\n        <ng-container matColumnDef=\\\"GroupName\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Group Name </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.GroupName}}</td>\\n        </ng-container>\\n        <!-- Email Column -->\\n        <ng-container matColumnDef=\\\"GroupEmail\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Group Email </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.GroupEmail}}</td>\\n        </ng-container>\\n        <!-- Action Column -->\\n        <ng-container matColumnDef=\\\"Action\\\">\\n          <th mat-header-cell *matHeaderCellDef> Action </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\">\\n            <button mat-icon-button (click)=\\\"OnEdit(row)\\\">\\n              <mat-icon>launch</mat-icon>\\n            </button>\\n            <button mat-icon-button color=\\\"warn\\\" (click)=\\\"OnDelete(row)\\\">\\n              <mat-icon>delete_outline</mat-icon>\\n            </button>\\n  \\n          </td>\\n        </ng-container>\\n  \\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      </table>\\n      <!-- <div class=\\\"example-loading-shade\\\" *ngIf=\\\"isLoadingResults || isRateLimitReached\\\"> -->\\n        <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"isLoadingResults\\\"></mat-progress-bar>\\n      <!-- </div> -->\\n  \\n      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n    </div>\\n  </mat-card>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { GroupService } from '../../shared/group.service';\nimport { MatPaginator, MatSort, MatTableDataSource, MatDialogConfig } from '@angular/material';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { GroupComponent } from '../group/group.component';\nimport { ToastrService } from 'ngx-toastr';\nimport { ConfirmDialogComponent } from '../../shared/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-groups',\n  templateUrl: './groups.component.html',\n  styleUrls: ['./groups.component.css']\n})\nexport class GroupsComponent implements OnInit {\n\n  listdata: MatTableDataSource<any>;\n  displayedColumns: string[] = ['GroupName', 'GroupEmail','Action'];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  isLoadingResults = true;\n  // isRateLimitReached = false;\n  constructor(private roleService: GroupService,\n    public dialog: MatDialog,\n    private toastr: ToastrService,\n  ) { }\n\n  ngOnInit() {\n    this.isLoadingResults = true;\n    this.roleService.GetGroup().subscribe(\n      GroupList => {\n        let array = GroupList.map(item => {\n          return {\n            $GroupId: item.key,\n            ...item.payload.val()\n          };\n        });\n        this.listdata = new MatTableDataSource(array);\n        this.listdata.sort = this.sort;\n        this.listdata.paginator = this.paginator;\n        this.isLoadingResults = false;\n        // this.isRateLimitReached = false;\n      }\n    );\n\n  }\n  applyFilter(filterValue: string) {\n    this.listdata.filter = filterValue.trim().toLowerCase();\n\n    if (this.listdata.paginator) {\n      this.listdata.paginator.firstPage();\n    }\n  }\n  openRoleDialog() {\n    // const dialogConfig = new MatDialogConfig();\n    // dialogConfig.disableClose = true;\n    // dialogConfig.autoFocus = true;\n    // dialogConfig.hasBackdrop = false;\n    this.roleService.InitializeFormGroup();\n    const dialogRef = this.dialog.open(GroupComponent, {\n      // width: '250px',\n      data: {},\n      hasBackdrop: false,\n      autoFocus: true,\n      disableClose: true\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      // this.animal = result;\n    });\n  }\n  OnEdit(row) {\n    this.roleService.PopulateGroup(row);\n    const dialogRef = this.dialog.open(GroupComponent, {\n      // width: '250px',\n      data: {},\n      hasBackdrop: false,\n      autoFocus: true,\n      disableClose: true\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      // this.animal = result;\n    });\n  }\n  OnDelete(row) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      // width: '250px',\n      data: {}    \n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result){\n      console.log(row.$RoleId);\n      this.roleService.DeleteGroup(row.$GroupId);\n      this.toastr.warning(':: Roles delete succesfully!');\n      // this.animal = result;\n      }\n    });\n\n\n\n  }\n}\n\n\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface InboxItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: InboxItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the Inbox view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class InboxDataSource extends DataSource<InboxItem> {\n  data: InboxItem[] = EXAMPLE_DATA;\n\n  constructor(private paginator: MatPaginator, private sort: MatSort) {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<InboxItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    // Set the paginators length\n    this.paginator.length = this.data.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: InboxItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: InboxItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table #table [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\n    <!-- Id Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.id}}</td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.name}}</td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n  <mat-paginator #paginator\\n    [length]=\\\"dataSource.data.length\\\"\\n    [pageIndex]=\\\"0\\\"\\n    [pageSize]=\\\"50\\\"\\n    [pageSizeOptions]=\\\"[25, 50, 100, 250]\\\">\\n  </mat-paginator>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { InboxDataSource } from './inbox-datasource';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-inbox',\n  templateUrl: './inbox.component.html',\n  styleUrls: ['./inbox.component.css']\n})\nexport class InboxComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  dataSource: InboxDataSource;\n  constructor(private toastr: ToastrService) {}\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.dataSource = new InboxDataSource(this.paginator, this.sort);\n    this.showSuccess();\n  }\n  showSuccess() {\n    this.toastr.success('Hello world!', 'Toastr fun!');\n  }\n}\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n   \\n}\\n\\na{\\ncursor: pointer;\\n}\\n\\n.example-icon {\\n  padding: 0 14px;\\n}\\n\\n.example-spacer {\\n  flex: 1 1 auto;\\n}\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"true\\\"\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar color=\\\"primary\\\">Angular-Mails </mat-toolbar>\\n    <br/>\\n    <button mat-raised-button style=\\\"width: 100%;\\\" (click)=\\\"openDialog()\\\" color=\\\"accent\\\"\\n    matTooltip=\\\"Click to compose your mail\\\">Compose</button>\\n    <mat-nav-list>\\n      <a mat-list-item routerLink=\\\"\\\">Inbox</a>\\n      <a mat-list-item routerLink=\\\"sentbox\\\">Sent</a>\\n      <a mat-list-item routerLink=\\\"drafts\\\">Drafts</a>      \\n    </mat-nav-list>\\n    <mat-accordion>\\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            Admin Panel\\n          </mat-panel-title>          \\n        </mat-expansion-panel-header> \\n        <mat-nav-list>  \\n        <a mat-list-item routerLink=\\\"groups\\\">Groups</a>\\n        <a mat-list-item routerLink=\\\"roles\\\">Roles</a>\\n        <a mat-list-item routerLink=\\\"user\\\">User</a>\\n        \\n        \\n      </mat-nav-list>    \\n      </mat-expansion-panel>\\n      <mat-expansion-panel (opened)=\\\"panelOpenState = true\\\"\\n                           (closed)=\\\"panelOpenState = false\\\">\\n                           </mat-expansion-panel>\\n                           </mat-accordion>\\n                           \\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\" >\\n        <mat-toolbar-row>          \\n      \\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <a (click)=\\\"drawer.toggle()\\\">\\n        <div *ngIf=\\\"!(isHandset$ | async)\\\">\\n          <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n          </div>\\n      </a>\\n          <span class=\\\"example-spacer\\\"></span>\\n          <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\">\\n              <button mat-menu-item>\\n                <mat-icon>dialpad</mat-icon>\\n                <span>Redial</span>\\n              </button>\\n              <button mat-menu-item disabled>\\n                <mat-icon>voicemail</mat-icon>\\n                <span>Check voicemail</span>\\n              </button>\\n              <button mat-menu-item>\\n                <mat-icon>notifications_off</mat-icon>\\n                <span>Disable alerts</span>\\n              </button>\\n            </mat-menu>\\n          <!-- <mat-icon class=\\\"example-icon\\\">delete</mat-icon> -->\\n        </mat-toolbar-row>      \\n    </mat-toolbar>\\n    <!-- Add Content Here -->\\n    <mat-card>\\n<router-outlet></router-outlet>\\n</mat-card>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material';\nimport { ComposeComponent } from '../compose/compose.component';\n\n@Component({\n  selector: 'app-main-nav',\n  templateUrl: './main-nav.component.html',\n  styleUrls: ['./main-nav.component.css']\n})\nexport class MainNavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n    \n  constructor(private breakpointObserver: BreakpointObserver,public dialog: MatDialog) {}\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ComposeComponent, {\n      // width: '250px',\n      data: {},\n      hasBackdrop:false\n    });\n  \n  dialogRef.afterClosed().subscribe(result => {\n    console.log('The dialog was closed : '+ result);\n    // this.animal = result;\n  });\n  \n}\n\n}\n\n","module.exports = \".example-icon {\\r\\n    padding: 0 14px;\\r\\n  }\\r\\n  \\r\\n  .example-spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\"","module.exports = \"<mat-toolbar>\\n  <!-- <mat-toolbar-row> -->\\n    <!-- <span>{{role.form.controls[$RoleId]?\\\"Update Role\\\":\\\"Create Role\\\"}}</span> -->\\n  <!-- </mat-toolbar-row> -->\\n  <mat-toolbar-row autofocus=\\\"false\\\">\\n    <span>{{role.form.controls[$RoleId]? \\\"Update Role\\\":\\\"Create Role\\\"}}</span>    \\n      <span class=\\\"example-spacer\\\"></span>\\n      <!-- <button mat-icon-button (click)=\\\"CloseDialog()\\\" autofocus=\\\"false\\\">\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">clear</mat-icon>\\n        </button> -->\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n<form [formGroup]=\\\"role.form\\\" class=\\\"normal-form\\\" (submit)=\\\"Onsubmit()\\\">\\n  <input type=\\\"hidden\\\" formControlName=\\\"$RoleId\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput formControlName=\\\"RoleName\\\" placeholder=\\\"Role\\\" >\\n    <mat-error> Please enter Role Name </mat-error>\\n  </mat-form-field>\\n  <div class=\\\"button-row\\\">\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"role.form.invalid\\\">Submit</button>\\n    <button mat-raised-button color=\\\"warn\\\" (click)=\\\"OnClear()\\\">Clear</button>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { RoleService } from '../../shared/role.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { RolesComponent } from '../roles/roles.component';\n\n\n@Component({\n  selector: 'app-role',\n  templateUrl: './role.component.html',\n  styleUrls: ['./role.component.css']\n})\nexport class RoleComponent implements OnInit {\n\n  constructor(private role: RoleService,\n    private toastr: ToastrService,\n    public dialogRef: MatDialogRef<RolesComponent>) { }\n\n  ngOnInit() {\n    this.role.GetRoles();\n  }\n  OnClear() {\n    this.role.form.reset();\n    this.role.InitializeFormGroup();\n    this.dialogRef.close();    \n    \n  }\n  Onsubmit() {\n    if (this.role.form.valid) {\n      if(!this.role.form.get('$RoleId').value){\n      // console.log(this.role.form.value);\n      this.role.InsertRole(this.role.form.value);\n      this.toastr.success(':: Roles added succesfully!');\n      }else{\n        this.role.UpdateRole(this.role.form.value);\n      this.toastr.info(':: Roles Updated succesfully!');\n      }\n      this.role.form.reset();\n      this.role.InitializeFormGroup();\n      this.OnClose();\n    }\n  }\n  OnClose() {\n    this.role.form.reset();\n    this.role.InitializeFormGroup();\n    this.dialogRef.close();\n  }\n  CloseDialog(){\n    this.dialogRef.close();    \n  }\n}\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  td, th {\\r\\n    width: 25%;\\r\\n  }\"","module.exports = \"<mat-card>\\n  <button mat-raised-button (click)=\\\"openRoleDialog()\\\">\\n    <mat-icon>create</mat-icon>\\n    Create Role</button>\\n\\n  <mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search..\\\">\\n  </mat-form-field>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"listdata\\\" matSort>\\n\\n      <!-- ID Column -->\\n      <!-- <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </td>\\n    </ng-container> -->\\n      <!-- RoleId Column -->\\n      <ng-container matColumnDef=\\\"$RoleId\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> $RoleId </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.$RoleId}}</td>\\n      </ng-container>\\n      <!-- Progress Column -->\\n      <ng-container matColumnDef=\\\"RoleName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Role Name </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.RoleName}}</td>\\n      </ng-container>\\n      <!-- Action Column -->\\n      <ng-container matColumnDef=\\\"Action\\\">\\n        <th mat-header-cell *matHeaderCellDef> Action </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">\\n          <button mat-icon-button (click)=\\\"OnEdit(row)\\\">\\n            <mat-icon>launch</mat-icon>\\n          </button>\\n          <button mat-icon-button color=\\\"warn\\\" (click)=\\\"OnDelete(row)\\\">\\n            <mat-icon>delete_outline</mat-icon>\\n          </button>\\n\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n    <!-- <div class=\\\"example-loading-shade\\\" *ngIf=\\\"isLoadingResults || isRateLimitReached\\\"> -->\\n      <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"isLoadingResults\\\"></mat-progress-bar>\\n    <!-- </div> -->\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n  </div>\\n</mat-card>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { RoleService } from '../../shared/role.service';\nimport { MatPaginator, MatSort, MatTableDataSource, MatDialogConfig } from '@angular/material';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { RoleComponent } from '../role/role.component';\nimport { ToastrService } from 'ngx-toastr';\nimport { ConfirmDialogComponent } from '../../shared/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-roles',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.css']\n})\nexport class RolesComponent implements OnInit {\n\n  listdata: MatTableDataSource<any>;\n  displayedColumns: string[] = ['RoleName', 'Action'];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  isLoadingResults = true;\n  // isRateLimitReached = false;\n  constructor(private roleService: RoleService,\n    public dialog: MatDialog,\n    private toastr: ToastrService,\n  ) { }\n\n  ngOnInit() {\n    this.isLoadingResults = true;\n    this.roleService.GetRoles().subscribe(\n      RoleList => {\n        let array = RoleList.map(item => {\n          return {\n            $RoleId: item.key,\n            ...item.payload.val()\n          };\n        });\n        this.listdata = new MatTableDataSource(array);\n        this.listdata.sort = this.sort;\n        this.listdata.paginator = this.paginator;\n        this.isLoadingResults = false;\n        // this.isRateLimitReached = false;\n      }\n    );\n\n  }\n  applyFilter(filterValue: string) {\n    this.listdata.filter = filterValue.trim().toLowerCase();\n\n    if (this.listdata.paginator) {\n      this.listdata.paginator.firstPage();\n    }\n  }\n  openRoleDialog() {\n    // const dialogConfig = new MatDialogConfig();\n    // dialogConfig.disableClose = true;\n    // dialogConfig.autoFocus = true;\n    // dialogConfig.hasBackdrop = false;\n    this.roleService.InitializeFormGroup();\n    const dialogRef = this.dialog.open(RoleComponent, {\n      // width: '250px',\n      data: {},\n      hasBackdrop: false,\n      autoFocus: true,\n      disableClose: true\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      // this.animal = result;\n    });\n  }\n  OnEdit(row) {\n    this.roleService.PopulateRole(row);\n    const dialogRef = this.dialog.open(RoleComponent, {\n      // width: '250px',\n      data: {},\n      hasBackdrop: false,\n      autoFocus: true,\n      disableClose: true\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      // this.animal = result;\n    });\n  }\n  OnDelete(row) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      // width: '250px',\n      data: {}    \n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result){\n      console.log(row.$RoleId);\n      this.roleService.DeleteRole(row.$RoleId);\n      this.toastr.warning(':: Roles delete succesfully!');\n      // this.animal = result;\n      }\n    });\n\n\n\n  }\n}\n\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface SentboxItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: SentboxItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the Sentbox view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class SentboxDataSource extends DataSource<SentboxItem> {\n  data: SentboxItem[] = EXAMPLE_DATA;\n\n  constructor(private paginator: MatPaginator, private sort: MatSort) {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<SentboxItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    // Set the paginators length\n    this.paginator.length = this.data.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: SentboxItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: SentboxItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table #table [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\n    <!-- Id Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.id}}</td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.name}}</td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n  <mat-paginator #paginator\\n    [length]=\\\"dataSource.data.length\\\"\\n    [pageIndex]=\\\"0\\\"\\n    [pageSize]=\\\"50\\\"\\n    [pageSizeOptions]=\\\"[25, 50, 100, 250]\\\">\\n  </mat-paginator>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { SentboxDataSource } from './sentbox-datasource';\n\n@Component({\n  selector: 'app-sentbox',\n  templateUrl: './sentbox.component.html',\n  styleUrls: ['./sentbox.component.css']\n})\nexport class SentboxComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  dataSource: SentboxDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.dataSource = new SentboxDataSource(this.paginator, this.sort);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup, FormControl, Validator, Validators } from '@angular/forms';\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\nimport * as _ from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppUserService {\n  constructor(private fireBase: AngularFireDatabase) { }\n  AppUserList: AngularFireList<any>;\n  dateNow : Date = new Date();  \n  form: FormGroup = new FormGroup({\n    $key: new FormControl(null),\n    UserId: new FormControl('', Validators.required),\n    UserName: new FormControl('', Validators.required),\n    Email: new FormControl('', [Validators.required, Validators.email]),\n    Phone: new FormControl('', [Validators.required,Validators.minLength(10)]),\n    PassWord: new FormControl('', Validators.required),\n    User_cust: new FormControl('', Validators.required),\n    IsBlocked: new FormControl('N'),\n    // LastUpdated: new FormControl('')\n  });\n\n  initializeFormGroup() {\n    this.form.setValue({\n      $key: null,\n      UserId: '',\n      UserName: '',\n      Email: '',\n      Phone: '',\n      PassWord: 'AngoEmails',\n      User_cust: '',\n      IsBlocked: 'false',\n      // LastUpdated: Date.toString() \n        });\n  }\n  \n  GetUsers() {\n    this.AppUserList = this.fireBase.list('Users');\n    return this.AppUserList.snapshotChanges();\n  }\n  InsertUser(User) {\n    // console.log(new Date());\n    // console.log(User.hireDate);\n    this.AppUserList.push({\n      // $key: User.$key,\n      UserId: User.UserId,\n      UserName: User.UserName,\n      Email: User.Email,\n      Phone: User.Phone,\n      PassWord: User.PassWord,\n      User_cust: User.User_cust,\n      IsBlocked: User.IsBlocked,\n      LastUpdated:this.dateNow\n    });\n  }\n  UpdateUser(User) {\n    this.AppUserList.update(User.$key,\n      {\n        // $key: User.$key,\n        UserId: User.UserId,\n        UserName: User.UserName,\n        Email: User.Email,\n        Phone: User.Phone,\n        PassWord: User.PassWord,\n        User_cust: User.User_cust,\n        IsBlocked: User.IsBlocked,\n      LastUpdated:this.dateNow\n      })\n  }\n  DeleteUser($key: string) {\n    this.AppUserList.remove($key);\n  }\n  PopulateUser(row) {\n       this.form.setValue(_.omit(row,'LastUpdated'));\n  }\n}","module.exports = \"\"","module.exports = \"<h2 mat-dialog-title>Delete all</h2>\\n<mat-dialog-content>Are you sure?</mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-button mat-dialog-close>No</button>\\n  <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\\n  <button mat-raised-button [mat-dialog-close]=\\\"true\\\" color=\\\"warn\\\">Yes</button>\\n</mat-dialog-actions>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup, FormControl, Validator, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\nimport { group } from '@angular/animations';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupService {\nconstructor(private fireBase: AngularFireDatabase) { }\n  GroupList: AngularFireList<any>;\n  form: FormGroup = new FormGroup({\n    $GroupId: new FormControl(null),\n    GroupName: new FormControl('', Validators.required),\n    GroupEmail:new FormControl('',[Validators.email,Validators.required])\n  });\n  InitializeFormGroup() {\n    this.form.setValue({\n      $GroupId: null,\n      GroupName: '',\n      GroupEmail:''\n    });\n\n  }\n  // InsertRole(form){  \n  //   console.log(form);\n  // }\n  GetGroup() {\n    this.GroupList = this.fireBase.list('Groups');\n    return this.GroupList.snapshotChanges();\n  }\n  InsertGroup(Group) {\n    this.GroupList.push({\n      GroupName: Group.GroupName,\n      GroupEmail:Group.GroupEmail\n    });\n  }\n  UpdateGroup(Group){\n    this.GroupList.update(Group.$GroupId,\n    {\n      GroupName:Group.GroupName,\n      GroupEmail:Group.GroupEmail\n    })\n  }\n  DeleteGroup($key:string){\n    this.GroupList.remove($key);\n  }\n  PopulateGroup(row){\n    this.form.setValue(row);\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatFormFieldModule} from '@angular/material';\nimport {MatInputModule} from '@angular/material';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatProgressBarModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule\n  ],\n  declarations: [],\n  exports:[\n    MatCardModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatProgressBarModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule\n  ]\n})\nexport class MaterialModelModule { }\n","import { Injectable } from '@angular/core';\nimport { FormGroup, FormControl, Validator, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n\n  constructor(private fireBase: AngularFireDatabase) { }\n  RoleList: AngularFireList<any>;\n  form: FormGroup = new FormGroup({\n    $RoleId: new FormControl(null),\n    RoleName: new FormControl('', Validators.required)\n  });\n  InitializeFormGroup() {\n    this.form.setValue({\n      $RoleId: null,\n      RoleName: ''\n    });\n\n  }\n  // InsertRole(form){  \n  //   console.log(form);\n  // }\n  GetRoles() {\n    this.RoleList = this.fireBase.list('Roles');\n    return this.RoleList.snapshotChanges();\n  }\n  InsertRole(Role) {\n    this.RoleList.push({\n      RoleName: Role.RoleName\n    });\n  }\n  UpdateRole(Role){\n    this.RoleList.update(Role.$RoleId,\n    {\n      RoleName:Role.RoleName\n    })\n  }\n  DeleteRole($key:string){\n    this.RoleList.remove($key);\n  }\n  PopulateRole(row){\n    this.form.setValue( row);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  FireConfig: {\n    apiKey: \"AIzaSyC_rQmH9tc2alqkdCLluiq_Ec6BWS0sXDA\",\n    authDomain: \"angularmails.firebaseapp.com\",\n    databaseURL: \"https://angularmails.firebaseio.com\",\n    projectId: \"angularmails\",\n    storageBucket: \"angularmails.appspot.com\",\n    messagingSenderId: \"685093232570\"\n  }\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}